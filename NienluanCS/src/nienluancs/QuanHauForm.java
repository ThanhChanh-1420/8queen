/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nienluancs;

import java.awt.Color;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JPanel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.*;
public class QuanHauForm extends javax.swing.JFrame {

    private int index = 0;
    private MainForm main;
    public static int array[][][];
    private int mang[][][];
    private JLabel lb[][];
    private int n; //kich thuoc ban co
    private JPanel board[][];
    private int t = 0;
    public boolean[] okRow, okCol, okPlus, okMinus;
    public int[] solution;
    //public static int array[][][];

    int count = 0;
    
    public QuanHauForm() {
        initComponents();
        n = 8;
        mang = new int[300][8][8];
        this.board = new JPanel[n][n];
        this.lb = new JLabel[n][n];
        int i, j;
        int x = 0, y = 0;
        int check = 0;
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                this.board[i][j] = new JPanel();
                this.lb[i][j] = new JLabel();
                this.board[i][j].setLocation(new Point(x, y));
                this.board[i][j].setSize(50, 50);
                this.lb[i][j].setSize(32,32);
                this.board[i][j].add(lb[i][j]);
                if (check == 0) {
                    this.board[i][j].setBackground(new Color(255, 255, 255));
                } else {
                    this.board[i][j].setBackground(new Color(0, 0, 0));
                }
                check = 1 - check;
                this.board[i][j].setVisible(true);
                pn.add(this.board[i][j]);
                x += 50;
            }
            check = 1 - check;
            y += 50;
            x = 0;
        }
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../Pic/icons8_queen_48px_1.png")));
    }
    public void setMain(MainForm a){
        this.main = a;
    }    
    public void PrintSolution() {
        count++;
        QuanHauForm.array = new int[300][8][8];
        //System.out.println("\nLoi giai thu " + count + ": \n");

        for (int i = 1; i <= n; i++) {
            int c = solution[i];
            for (int j = 1; j <= n; j++) {
                if (c == j) {
                    //      System.out.print("Q ");
                    QuanHauForm.array[index][i - 1][j - 1] = 1;
                } else {
                    //     System.out.print("* ");
                    QuanHauForm.array[index][i - 1][j - 1] = 0;
                }
                //System.out.println(array[i-1][j-1]+"\n");
            }
            // System.out.print("\n");
        }
        // System.out.print("\n");
        for (int i = 0; i < n; i++) {
            System.out.print(index);
            for (int j = 0; j < n; j++) {
                //System.out.print(QuanHauForm.array[index][i][j]);
                mang[index][i][j] = QuanHauForm.array[index][i][j];
                System.out.print(mang[index][i][j]);
            }
            System.out.print("\n");

        }
    }

    public void Try(int i) {
        for (int j = 1; j <= n; j++) {
            if (!okRow[i] && !okCol[j] && !okPlus[i + j - 1] && !okMinus[i - j + n]) {
                solution[i] = j;
                okCol[j] = true;
                okPlus[i + j - 1] = true;
                okMinus[i - j + n] = true;
                if (i < n) {
                    Try(i + 1);
                } else {

                    PrintSolution();
                    index++;
                }
                okRow[i] = false;
                okCol[j] = false;
                okPlus[i + j - 1] = false;
                okMinus[i - j + n] = false;
            }
        }
    }

    public void Solve() {
        Try(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnMain = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btninfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BÀI TOÁN 8 QUÂN HẬU");

        javax.swing.GroupLayout pnLayout = new javax.swing.GroupLayout(pn);
        pn.setLayout(pnLayout);
        pnLayout.setHorizontalGroup(
            pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );
        pnLayout.setVerticalGroup(
            pnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        btnOk.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnOk.setText("Thực hiện");
        btnOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOkMouseClicked(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnNext.setText("Kế tiếp");
        btnNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNextMouseClicked(evt);
            }
        });

        btnPre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnPre.setText("Quay lại");
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnMain.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnMain.setText("Trang chủ");
        btnMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMainMouseClicked(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSave.setText("Lưu trữ");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Kích thước bàn cờ 8x8");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setText("BÀI TOÁN QUÂN HẬU ");

        btninfo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btninfo.setText("Thông tin");
        btninfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btninfoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btninfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                .addGap(525, 525, 525)
                .addComponent(jLabel1)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btninfo, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(37, 37, 37)
                        .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addComponent(btnPre, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(btnMain, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                        .addGap(75, 75, 75))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkMouseClicked
        try {
           // if (txtN.getText().equals("8")){
            //this.n = Integer.parseInt(txtN.getText());
            this.n=8;
            okRow = new boolean[n + 1];
            okCol = new boolean[n + 1];
            okPlus = new boolean[2 * n];
            okMinus = new boolean[2 * n];
            solution = new int[n + 1];
            this.Solve();
            index = 0;
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (mang[index][i][j] == 1) {
                        //this.board[i][j].setBackground(Color.red);
                        this.lb[i][j].setIcon(new ImageIcon(this.getClass().getResource("../Pic/icons8_queen_48px_1.png")));
                    }
                    
                }
                
            }
            
           /* else{
                String t = new String();
                t = "NHẬP KÍCH THƯỚC BÀN CỜ LÀ 8 !!!";
                JOptionPane.showConfirmDialog(rootPane, t, "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
            }*/
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnOkMouseClicked

    private void btnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMouseClicked
        int i, j;
        int check = 0;
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (check == 0) {
                    this.board[i][j].setBackground(new Color(255, 255, 255));
                    this.lb[i][j].setIcon(null);
                    
                } else {
                    this.board[i][j].setBackground(new Color(0, 0, 0));
                    this.lb[i][j].setIcon(null);
                    
                }
                check = 1 - check;

            }
            check = 1 - check;
        }
        index++;
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (mang[index][i][j] == 1) {
                    //this.board[i][j].setBackground(Color.red);
                    this.lb[i][j].setIcon(new ImageIcon(this.getClass().getResource("../Pic/icons8_queen_48px_1.png")));
                }
            }
        }
    }//GEN-LAST:event_btnNextMouseClicked

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        // TODO add your handling code here:
        int i, j;
        int check = 0;
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (check == 0) {
                    this.board[i][j].setBackground(new Color(255, 255, 255));
                    this.lb[i][j].setIcon(null);
                } else {
                    this.board[i][j].setBackground(new Color(0, 0, 0));
                    this.lb[i][j].setIcon(null);
                }
                check = 1 - check;

            }
            check = 1 - check;
        }
        if(index!=0)
            index--;
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (mang[index][i][j] == 1) {
                    //this.board[i][j].setBackground(Color.red);
                    this.lb[i][j].setIcon(new ImageIcon(this.getClass().getResource("../Pic/icons8_queen_48px_1.png")));
                }
            }
        }
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMainMouseClicked
        this.main.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnMainMouseClicked
    public String getKetQua(int index){
        String kq = new  String();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                kq+=mang[index][i][j]+" ";
            }
            kq+="\n";
        }
        return kq;
    }
    
    public void writeToFile(String a) throws IOException{
///
                

            
                File f = new File(a);
                System.out.println(f);
                FileWriter fw = new FileWriter(f,true);
                System.out.println(fw);
                BufferedWriter bw = new BufferedWriter(fw);
                String list;
                for(int i = 0;i<92;i++){
                    
                    list="Lời giải thứ "+(i+1)+":\n" + this.getKetQua(i);
                    try{
                        //System.out.println(bw);
                        bw.newLine();
                        bw.write(list);
                        
                        bw.flush();
                        //bw.close();
                    }
                    catch(Exception e){
                        System.out.println(e);
                    }
                }
                bw.close();
                ///
}
    
    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        // TODO add your handling code here:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String dbUrl= "jdbc:sqlserver://LAPTOP-E3J8KANC\\SQLEXPRESS:1433;databaseName=NLCSNganh;user=sa;password=sa";
            Connection con=DriverManager.getConnection(dbUrl);
            Statement s = con.createStatement();
            Statement x = con.createStatement();
            ResultSet rs = x.executeQuery("Select max(ID) from Quanhau;");
            rs.next();
            int a = rs.getInt(1)+1;
            System.out.println(a);
            for(int i = 0;i<92;i++){
            s.executeUpdate("Insert into QuanHau values ("+a+",'"+this.getKetQua(i)+"',"+i+");");
                //System.out.println(this.getKetQua(i));
            }
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(dialog, "Thực hiện lưu trữ CSDL thành công !!!");
            t++;
            //con.close();
        }catch(Exception ex){
            ex.printStackTrace();
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(dialog, "Thực hiện lưu trữ CSDL không thành công !!!");
        }
        try {
            JFileChooser save = new JFileChooser();
            String savePath = new String();
            int returnValue = save.showSaveDialog(null);
            if (returnValue == JFileChooser.APPROVE_OPTION){
                savePath = save.getSelectedFile().getPath();
                //this.main.writeFile(savePath);
                this.writeToFile(savePath);
            }else{
                savePath = "NO";
            }
            //this.writeToFile();
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(dialog, "Thực hiện lưu trữ File Text thành công !!!");
        } catch (IOException ex) {
            Logger.getLogger(QuanHauForm.class.getName()).log(Level.SEVERE, null, ex);
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(dialog, "Thực hiện lưu trữ File Text không thành công !!!");
        }
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btninfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btninfoMouseClicked
        // TODO add your handling code here:
        String thongtin = new String();
        thongtin = "Bài toán 8 quân Hậu trong bàn cờ vua \n"+
                "Bài toán tám quân hậu là bài toán đặt tám quân hậu trên bàn cờ vua kích thước 8×8 sao cho không có quân hậu nào có thể \"ăn\" được quân hậu khác,\n"+
                "hay nói khác đi không quân hậu nào có để di chuyển theo quy tắc cờ vua. Màu của các quân hậu không có ý nghĩa trong bài toán này.\n"+
                "Như vậy, lời giải của bài toán là một cách xếp tám quân hậu trên bàn cờ sao cho không có hai quân nào đứng trên cùng hàng, hoặc cùng cột hoặc cùng đường chéo.\n"+""
                +"Bài toán tám quân hậu có thể tổng quát hóa thành bài toán đặt n quân hậu trên bàn cờ n×n(n ≥ 4).";
       JDialog dialog = new JDialog();
       dialog.setAlwaysOnTop(true);
       JOptionPane.showMessageDialog(dialog, thongtin);
    }//GEN-LAST:event_btninfoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanHauForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanHauForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanHauForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanHauForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanHauForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btninfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pn;
    // End of variables declaration//GEN-END:variables
}
